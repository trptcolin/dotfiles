# Set the prefix to ^A, like screen
set -g prefix C-a
unbind C-b
bind a send-prefix

# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind s split-window -v
bind v split-window -h

bind | split-window -h
bind _ split-window -v

bind ^s split-window -v
bind ^v split-window -h

# move around panes with hjkl, as one would in vim after pressing ctrl-w
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind ^h select-pane -L
bind ^j select-pane -D
bind ^k select-pane -U
bind ^l select-pane -R

# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by, only
# one at a time can be slow
bind < resize-pane -L 1
bind > resize-pane -R 1
bind - resize-pane -D 1
bind + resize-pane -U 1

# bind : to command-prompt like vim
# this is the default in tmux already
bind : command-prompt

# session management
bind C new-session
bind L choose-session

# vi-style controls for copy mode
setw -g mode-keys vi

bind ^a last-window # toggle last window like screen

set -g update-environment "DISPLAY WINDOWID SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION"

bind K confirm kill-server
bind X confirm kill-window

set -g status-bg default
set -g status-fg white

# left side of status bar holds "(>- session name -<)"
set -g status-left-length 100
set -g status-left-bg green
set -g status-left-fg black
set -g status-left-attr bold
set -g status-left ''

# right side of status bar holds "[host name] (date time)"
set -g status-right-length 100
set -g status-right-fg black
set -g status-right-attr bold
set -g status-right '#[fg=cyan][#[fg=white]#S#[fg=cyan]] #[fg=magenta][#[fg=white]#T#[fg=magenta]]#[default] #[fg=blue](#[fg=white]%d-%b-%y %H:%M#[fg=blue])#[default] '

# make background window look like white tab
set-window-option -g window-status-bg default
set-window-option -g window-status-fg white
set-window-option -g window-status-attr none
set-window-option -g window-status-format ' \(#I) #W/ '

# make foreground window look like bold yellow foreground tab
set-window-option -g window-status-current-bg default
set-window-option -g window-status-current-fg yellow
set-window-option -g window-status-current-attr none
set-window-option -g window-status-current-format '\#[bg=default,underscore] (#I) #W #[default]/'

# select panes with mouse
# can be made to work in OSX Terminal with MouseTerm SIMBL plugin
# set -g mouse-select-pane on

# active terminal yellow border, non-active white
set -g pane-border-bg default
set -g pane-border-fg white
set -g pane-active-border-bg default
set -g pane-active-border-fg yellow

# set a 256color $TERM variable so programs inside tmux know they can use 256 colors
set -g default-terminal xterm
# NOTE: the above line will break colors on OSX Terminal since it is only 8 colors.
#       you can comment it out to use tmux with it.

# reload tmux config file with C-a r
bind r source ~/.tmux.conf

## see https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard
#set-option -g default-command "reattach-to-user-namespace -l zsh"

bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "pbcopy"
#bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "pbcopy"
#bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

bind ] run "pbpaste | tmux load-buffer - && tmux paste-buffer"
#bind ] run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"

set -g base-index 1
set -s escape-time 0
set-option -g status-keys emacs
bind-key 'P' run-shell "tmux set-buffer \"$(pbpaste)\"; tmux paste-buffer"
bind-key 'Y' run-shell "tmux show-buffer | pbcopy"

run-shell ~/lib/tmux-yank/yank.tmux
